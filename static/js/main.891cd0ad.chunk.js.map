{"version":3,"sources":["store/actionTypes.js","store/reducers/DeviceStore.js","store/reducers/RouterStore.js","store/reducers/index.js","store/reducers/HomeStore.js","store/reducers/ServerStore.js","store/AppStore.js","services/HomeService.js","store/actions/HomeActions.js","services/DeviceService.js","store/actions/DeviceActions.js","services/RouterService.js","store/actions/RouterActions.js","services/ServerService.js","store/actions/index.js","store/actions/ServerActions.js","cmps/MainList.js","cmps/DeviceMap.js","cmps/RouterMap.js","cmps/RoutersMap.js","cmps/DrawLine.js","cmps/DrawLineList.js","cmps/DraggingListener.js","cmps/MainPreview.js","services/MediaService.js","cmps/IsWinWidthDesk.js","cmps/Main.js","pages/Home.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["SET_HOME_DATA","SET_DEVICE_DATA","SET_CURR_DEVICE_BY_ID","UPDATE_CURR_DEVICE","SET_ROUTER_DATA","SET_SERVER_DATA","makeDeepCopy","state","JSON","parse","stringify","rootReducer","combineReducers","homeStore","action","type","payload","deviceStore","copy","list","map","dev","currDevice","_id","deviceById","find","routerStore","serverStore","createStore","applyMiddleware","thunk","initialState","name","getData","Promise","resolve","routers","ip","location","x","y","zIndex","connections","manufacturer","operatingSystem","publishDate","networkType","generation","memory","RAM","processor","isDraging","version","POE","CPU","ROM","NVRAM","LAN","WAN","flashMemory","networkInterfaces","wirelessSupport","speed","weight","Dimension","networkSecurity","language","DB","loadHomeData","dispatch","a","HomeService","initData","loadDeviceData","DeviceService","changeCurrDeviceById","id","updateCurrDevice","updatedDevice","loadRouterData","RouterService","loadServerData","ServerService","React","memo","devices","isMobile","useDispatch","className","key","onClick","actions","DeviceMap","device","clientDown","onCreateConnection","useState","toggleOptions","setToggleOptions","chackForConnection","ev","target","getAttribute","window","removeEventListener","style","top","left","onMouseDown","idx","onTouchStart","draggable","src","data-id","alt","title","addEventListener","RouterMap","router","RoutersMap","deviceId","RouterList","DrawLine","point1","point2","onRemoveConnection","line","useRef","boxSize","optionsSize","minX","Math","min","minY","absX","abs","absY","useEffect","updateConnection","halfBoxSize","destX","destY","current","setAttributeNS","styles","svg","height","width","options","ref","DrawLineList","lines","deviceLocationId","locationById","charAt","linesBetweenDevices","lineIds","DraggingListener","pointerDiff","typeToMove","newDevice","setNewDevice","isMove","setIsMove","setUpdate","moveToNewLocation","useCallback","clientX","clientY","clientMove","touches","changedTouches","clientUp","prevState","setDevice","setPointerDiff","setTypeToMove","calcPointerDiff","temp","createConnection","originId","targetId","con","push","con1","con2","findIndex","splice","sDesktop","IsWinWidth","MediaService","innerWidth","isDesktop","setIsDesktop","windowWidth","updateIsDesktop","currentTarget","useSelector","isListOpen","setIsListOpen","IsWinWidthDesk","toggleDeviceMenu","display","Router","exact","path","component","Home","Component","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","store","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.891cd0ad.chunk.js","sourcesContent":["\r\nexport const SET_HOME_DATA = 'SET_HOME_DATA'\r\n\r\n\r\nexport const SET_DEVICE_DATA = 'SET_DEVICE_DATA'\r\nexport const SET_CURR_DEVICE_BY_ID = 'UPDATE_CURR_DEVICE_BY_ID'\r\nexport const UPDATE_CURR_DEVICE = 'UPDATE_CURR_DEVICE'\r\n\r\nexport const SET_ROUTER_DATA = 'SET_ROUTER_DATA'\r\n\r\nexport const SET_SERVER_DATA = 'SET_SERVER_DATA'","import {\r\n  SET_DEVICE_DATA,\r\n  SET_CURR_DEVICE_BY_ID,\r\n  UPDATE_CURR_DEVICE,\r\n} from '../actionTypes';\r\n\r\nconst initialState = null;\r\n\r\nexport default (state = initialState, action) => {\r\n  var copy = makeDeepCopy(state);\r\n  switch (action.type) {\r\n    case SET_DEVICE_DATA:\r\n      return action.payload;\r\n    case SET_CURR_DEVICE_BY_ID:\r\n      copy.list = copy.list.map(dev => copy.currDevice && dev._id === copy.currDevice._id ? copy.currDevice : dev);\r\n      const deviceById = copy.list.find(dev => dev._id === action.payload);\r\n      copy.currDevice = deviceById;\r\n      return copy;\r\n    case UPDATE_CURR_DEVICE:\r\n      copy.currDevice = action.payload;\r\n      return copy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction makeDeepCopy(state) {\r\n  return JSON.parse(JSON.stringify(state));\r\n}","import {\r\n  SET_ROUTER_DATA,\r\n} from '../actionTypes';\r\n\r\nconst initialState = null;\r\n\r\nexport default (state = initialState, action) => {\r\n  // var copy = makeDeepCopy(state);\r\n  switch (action.type) {\r\n    case SET_ROUTER_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// function makeDeepCopy(state) {\r\n//   return JSON.parse(JSON.stringify(state));\r\n// }","import HomeStore from './HomeStore';\r\nimport DeviceStore from './DeviceStore';\r\nimport RouterStore from './RouterStore';\r\nimport ServerStore from './ServerStore';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    homeStore: HomeStore,\r\n    deviceStore: DeviceStore,\r\n    routerStore: RouterStore,\r\n    serverStore: ServerStore,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n  SET_HOME_DATA,\r\n} from '../actionTypes';\r\n\r\nconst initialState = null;\r\n\r\nexport default (state = initialState, action) => {\r\n  // var copy = makeDeepCopy(state);\r\n  switch (action.type) {\r\n    case SET_HOME_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// function makeDeepCopy(state) {\r\n//   return JSON.parse(JSON.stringify(state));\r\n// }","import {\r\n  SET_SERVER_DATA,\r\n} from '../actionTypes';\r\n\r\nconst initialState = null;\r\n\r\nexport default (state = initialState, action) => {\r\n  // var copy = makeDeepCopy(state);\r\n  switch (action.type) {\r\n    case SET_SERVER_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// function makeDeepCopy(state) {\r\n//   return JSON.parse(JSON.stringify(state));\r\n// }","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);","const initialState = {\r\n  name: 'omer'\r\n}\r\n\r\nfunction getData() {\r\n  return Promise.resolve(initialState)\r\n}\r\n\r\nexport default {\r\n  getData,\r\n}\r\n","import HomeService from '../../services/HomeService';\r\nimport {\r\n  SET_HOME_DATA,\r\n} from '../actionTypes';\r\n\r\nfunction loadHomeData() {\r\n  return async (dispatch) => {\r\n    const initData = await HomeService.getData();\r\n    dispatch({ type: SET_HOME_DATA, payload: initData })\r\n  }\r\n}\r\n\r\nexport default {\r\n  loadHomeData\r\n}","const initialState = {\r\n  currDevice: null,\r\n  list: [\r\n    {\r\n      _id: 'P101',\r\n      name: 'Galaxy s7',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11'], ['R11', 'P101']],\r\n      manufacturer: 'Samsung',\r\n      operatingSystem: 'Android',\r\n      publishDate: '2017',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '128GB',\r\n      RAM: '6GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 40, y: 40 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P102',\r\n      name: 'Galaxy Note 9',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11'], ['R10', 'P102']],\r\n      manufacturer: 'Samsung',\r\n      operatingSystem: 'Android',\r\n      publishDate: '2018',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '128GB',\r\n      RAM: '6GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 40, y: 40 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P103',\r\n      name: 'iPhone 8',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2018',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 40, y: 40 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P104',\r\n      name: 'iPhone 9',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R11', 'P104']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2019',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 20, y: 20 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P105',\r\n      name: 'iPhone 10',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 400, y: 135 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 270, y: 400 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11'], ['R11', 'P105'], ['R10', 'P105']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2020',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 120, y: 130 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P106',\r\n      name: 'iPhone 11',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R11', 'P106']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2021',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 20, y: 20 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P107',\r\n      name: 'iPhone 12',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2022',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 20, y: 20 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P108',\r\n      name: 'iPhone 13',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11'], ['R11', 'P108'], ['R10', 'P108']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2023',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 20, y: 20 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P109',\r\n      name: 'iPhone 14',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 400, y: 135 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 270, y: 400 }, zIndex: 10 }],\r\n      connections: [],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2024',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 130, y: 120 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P110',\r\n      name: 'iPhone 15',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2025',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 20, y: 20 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P111',\r\n      name: 'iPhone 16',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2026',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 20, y: 20 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n    {\r\n      _id: 'P112',\r\n      name: 'iPhone 17',\r\n      routers: [{ _id: 'R10', ip: '', location: { x: 190, y: 60 }, zIndex: 10 },\r\n      { _id: 'R11', ip: '', location: { x: 140, y: 220 }, zIndex: 10 }],\r\n      connections: [['R10', 'R11'], ['R11', 'P112']],\r\n      manufacturer: 'Apple',\r\n      operatingSystem: 'iOS',\r\n      publishDate: '2027',\r\n      networkType: 'LTE',\r\n      generation: 4,\r\n      memory: '256GB',\r\n      RAM: '4GB',\r\n      processor: '2700 1800 MHz',\r\n      location: { x: 20, y: 20 },\r\n      zIndex: 10,\r\n      isDraging: false,\r\n    },\r\n  ]\r\n}\r\n\r\nfunction getData() {\r\n  return Promise.resolve(initialState)\r\n}\r\n\r\nexport default {\r\n  getData,\r\n}\r\n","import DeviceService from '../../services/DeviceService';\r\nimport {\r\n  SET_DEVICE_DATA,\r\n  SET_CURR_DEVICE_BY_ID,\r\n  UPDATE_CURR_DEVICE\r\n} from '../actionTypes';\r\n\r\nfunction loadDeviceData() {\r\n  return async (dispatch) => {\r\n    const initData = await DeviceService.getData();\r\n    dispatch({ type: SET_DEVICE_DATA, payload: initData })\r\n  }\r\n}\r\n\r\nfunction changeCurrDeviceById(id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: SET_CURR_DEVICE_BY_ID, payload: id })\r\n  }\r\n}\r\n\r\nfunction updateCurrDevice(updatedDevice) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: UPDATE_CURR_DEVICE, payload: updatedDevice })\r\n  }\r\n}\r\n\r\nexport default {\r\n  loadDeviceData,\r\n  changeCurrDeviceById,\r\n  updateCurrDevice,\r\n}\r\n","const initialState = {\r\n  list: [\r\n    {\r\n      _id: 'R10',\r\n      manufacturer: 'Cisco',\r\n      type: 'RV130',\r\n      version: '4.2',\r\n      ip: '192.168.1.1',\r\n      POE: true,\r\n      CPU: '2.4 GHz',\r\n      ROM: '64 MB',\r\n      RAM: '128 MB',\r\n      NVRAM: '16 MB',\r\n      LAN: 'RJ-45 x 4 for 10/100/1000 Base T',\r\n      WAN: 'RJ45 LAN',\r\n      flashMemory: '8 MB',\r\n      networkInterfaces: 'networkInterfaces',\r\n      wirelessSupport: '',\r\n      speed: '300 Mbsp',\r\n      weight: '660 g',\r\n      Dimension: '190mm * 35m * 165mm',\r\n      networkSecurity: 'WPA2, Guest Access, DoS, Firewall'\r\n    },\r\n    {\r\n      _id: 'R11',\r\n      manufacturer: 'Amazon',\r\n      type: 'R6120-100NAS',\r\n      version: '4.2',\r\n      ip: '192.168.1.1',\r\n      POE: true,\r\n      CPU: '5 GHz',\r\n      ROM: '64 MB',\r\n      RAM: '128 MB',\r\n      NVRAM: '16 MB',\r\n      LAN: 'RJ-45 x 4 for 10/100/1000 Base T',\r\n      WAN: 'RJ45 LAN',\r\n      flashMemory: '8 MB',\r\n      networkInterfaces: 'networkInterfaces',\r\n      wirelessSupport: '802.11b/g/n',\r\n      speed: '1200 Mbsp',\r\n      weight: '800 g',\r\n      Dimension: '190mm * 35m * 165mm',\r\n      networkSecurity: 'WPA2, Guest Access, DoS, Firewall'\r\n    },\r\n    {\r\n      _id: 'R12',\r\n      manufacturer: 'COMFAST',\r\n      type: 'CF-WR610N',\r\n      version: '4.2',\r\n      ip: '192.168.1.1',\r\n      POE: true,\r\n      CPU: '2.4 GHz',\r\n      ROM: '64 MB',\r\n      RAM: '128 MB',\r\n      NVRAM: '16 MB',\r\n      LAN: 'RJ-45 x 4 for 10/100/1000 Base T',\r\n      WAN: 'RJ45 LAN',\r\n      flashMemory: '8 MB',\r\n      networkInterfaces: 'networkInterfaces',\r\n      wirelessSupport: '802.11a/g/n/ac',\r\n      speed: '300 Mbsp',\r\n      weight: '660 g',\r\n      Dimension: '190mm * 35m * 165mm',\r\n      networkSecurity: 'WPA2, Guest Access, DoS, Firewall'\r\n    },\r\n    {\r\n      _id: 'R13',\r\n      manufacturer: 'D-Link',\r\n      type: 'DIR-878/IL/A1A',\r\n      version: '4.2',\r\n      ip: '192.168.1.1',\r\n      POE: true,\r\n      CPU: '2.4 GHz',\r\n      ROM: '64 MB',\r\n      RAM: '128 MB',\r\n      NVRAM: '16 MB',\r\n      LAN: 'RJ-45 x 4 for 10/100/1000 Base T',\r\n      WAN: 'RJ45 LAN',\r\n      flashMemory: '8 MB',\r\n      networkInterfaces: 'networkInterfaces',\r\n      wirelessSupport: '',\r\n      speed: '300 Mbsp',\r\n      weight: '660 g',\r\n      Dimension: '190mm * 35m * 165mm',\r\n      networkSecurity: 'WPA2, Guest Access, DoS, Firewall'\r\n    },\r\n  ]\r\n}\r\n\r\nfunction getData() {\r\n  return Promise.resolve(initialState)\r\n}\r\n\r\nexport default {\r\n  getData,\r\n}\r\n","import RouterService from '../../services/RouterService';\r\nimport {\r\n  SET_ROUTER_DATA,\r\n} from '../actionTypes';\r\n\r\nfunction loadRouterData() {\r\n  return async (dispatch) => {\r\n    const initData = await RouterService.getData();\r\n    dispatch({ type: SET_ROUTER_DATA, payload: initData })\r\n  }\r\n}\r\n\r\nexport default {\r\n  loadRouterData,\r\n}\r\n","const initialState = {\r\n  list: [\r\n    {\r\n      _id: 'S1001',\r\n      name: 'Server 1',\r\n      language: 'Node.js',\r\n      DB: 'MongoDB',\r\n    },\r\n  ]\r\n}\r\n\r\nfunction getData() {\r\n  return Promise.resolve(initialState)\r\n}\r\n\r\nexport default {\r\n  getData,\r\n}\r\n","import HomeActions from './HomeActions';\r\nimport DeviceActions from './DeviceActions';\r\nimport RouterActions from './RouterActions';\r\nimport ServerActions from './ServerActions';\r\n\r\nexport default {\r\n    ...HomeActions,\r\n    ...DeviceActions,\r\n    ...RouterActions,\r\n    ...ServerActions,\r\n};","import ServerService from '../../services/ServerService';\r\nimport {\r\n  SET_SERVER_DATA,\r\n} from '../actionTypes';\r\n\r\nfunction loadServerData() {\r\n  return async (dispatch) => {\r\n    const initData = await ServerService.getData();\r\n    dispatch({ type: SET_SERVER_DATA, payload: initData })\r\n  }\r\n}\r\n\r\nexport default {\r\n  loadServerData,\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from '../store/actions';\r\n\r\nfunction MainList({ devices, isMobile, currDevice }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectDevice = (id) => {\r\n    dispatch(actions.changeCurrDeviceById(id));\r\n  }\r\n\r\n  return (\r\n    <div className={`device-list ${isMobile ? 'mobile' : 'desktop'}`}>\r\n      {devices.map(dev =>\r\n        <div className={`single-device ${currDevice && currDevice._id === dev._id ? 'selected' : ''} `} key={dev._id}\r\n          onClick={() => selectDevice(dev._id)}>\r\n          {dev.name}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MainList)","import React, { lazy, useState } from 'react';\r\n\r\nfunction DeviceMap({ device, clientDown, onCreateConnection }) {\r\n\r\n  const name = 'Device';\r\n  const [toggleOptions, setToggleOptions] = useState('');\r\n\r\n  const newConnection = () => {\r\n    window.addEventListener('click', chackForConnection, false);\r\n  }\r\n\r\n  const chackForConnection = (ev) => {\r\n    if (ev.target.getAttribute('src') !== 'assets/img/icons/make new connection.png') {\r\n      if (ev.target.getAttribute('data-id') && ev.target.getAttribute('data-id') !== device._id) {\r\n        onCreateConnection(device._id, ev.target.getAttribute('data-id'));\r\n      }\r\n      window.removeEventListener('click', chackForConnection, false);\r\n      setToggleOptions('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrap-device\" style={{\r\n      top: `${device.location.y}px`, left: `${device.location.x}px`, zIndex: device.zIndex\r\n    }}>\r\n      <div className=\"device-icon\"\r\n        onMouseDown={ev => clientDown(ev, { name, idx: 0 })}\r\n        onTouchStart={ev => clientDown(ev, { name, idx: 0 })}\r\n      >\r\n        <img draggable=\"false\" src=\"assets/img/icons/phone.png\" data-id={device._id} alt={`${device.name}`} title={`${device.name}`} />\r\n      </div>\r\n      <div className=\"title-device\">\r\n        <span title={`${device.name}`}>{device.name}</span>\r\n      </div>\r\n      {/* TO CHACK WHAT MORE EFECTIVE BUTTON OR DIV */}\r\n      <button className=\"device-btn-options\"\r\n        onClick={() => toggleOptions ? setToggleOptions('') : setToggleOptions(device._id)}>\r\n        <img src=\"assets/img/icons/mehr3.png\" alt=\"Options\" />\r\n      </button>\r\n      {toggleOptions === device._id &&\r\n        <div className=\"device-options\">\r\n          <img src=\"assets/img/icons/details.png\" alt=\"\" />\r\n          <img src={\"assets/img/icons/make new connection.png\"} alt=\"\" onClick={newConnection} />\r\n          <img src=\"assets/img/icons/history.png\" alt=\"\" />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeviceMap;","import React, { useState } from 'react';\r\n\r\nfunction RouterMap({ router, idx, clientDown, onCreateConnection }) {\r\n\r\n  const name = 'Router';\r\n  const [toggleOptions, setToggleOptions] = useState(false);\r\n\r\n  const newConnection = () => {\r\n    window.addEventListener('click', chackForConnection, false);\r\n  }\r\n  const chackForConnection = (ev) => {\r\n    if (ev.target.getAttribute('src') !== 'assets/img/icons/make new connection.png') {\r\n      if (ev.target.getAttribute('data-id') && ev.target.getAttribute('data-id') !== router._id) {\r\n        onCreateConnection(router._id, ev.target.getAttribute('data-id'));\r\n      }\r\n      window.removeEventListener('click', chackForConnection, false);\r\n      setToggleOptions(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrap-device\"\r\n      style={{ top: `${router.location.y}px`, left: `${router.location.x}px`, zIndex: router.zIndex }}>\r\n      <div className=\"device-icon\"\r\n        onMouseDown={ev => clientDown(ev, { name, idx })}\r\n        onTouchStart={ev => clientDown(ev, { name, idx })}\r\n      >\r\n        <img draggable=\"false\" src=\"assets/img/icons/router.png\" data-id={router._id} alt={`Router ${router._id}`} title={`Router ${router._id}`} />\r\n      </div>\r\n      <div className=\"title-device\">\r\n        <span title={`Router ${router._id}`}>Router {router._id}</span>\r\n      </div>\r\n      <button className=\"device-btn-options\" onClick={() => setToggleOptions(!toggleOptions)}>\r\n        <img src=\"assets/img/icons/mehr3.png\" alt=\"Options\" />\r\n      </button>\r\n      {toggleOptions &&\r\n        <div className=\"device-options\">\r\n          <img src=\"assets/img/icons/details.png\" alt=\"\" />\r\n          <img src=\"assets/img/icons/make new connection.png\" alt=\"\" onClick={() => newConnection(router._id)} />\r\n          <img src=\"assets/img/icons/history.png\" alt=\"\" />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RouterMap;","import React from 'react';\r\n\r\nimport RouterMap from './RouterMap';\r\n\r\nfunction RoutersMap({ routers, clientDown, onCreateConnection, deviceId }) {\r\n\r\n  const RouterList = routers.map((router, idx) => {\r\n    return <RouterMap key={`${deviceId}${router._id}`} router={router} idx={idx} clientDown={clientDown}\r\n      onCreateConnection={onCreateConnection} />\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {RouterList}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoutersMap;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction DrawLine({ point1, point2, onRemoveConnection }) {\r\n\r\n  const line = useRef(null);\r\n  const [boxSize] = useState(100);\r\n  const [optionsSize] = useState(40);\r\n  const [toggleOptions, setToggleOptions] = useState(false);\r\n\r\n  const minX = Math.min(point1.x, point2.x);\r\n  const minY = Math.min(point1.y, point2.y);\r\n  const absX = Math.abs(point1.x - point2.x);\r\n  const absY = Math.abs(point1.y - point2.y);\r\n\r\n  useEffect(() => {\r\n    updateConnection();\r\n  });\r\n\r\n  const updateConnection = () => {\r\n    const halfBoxSize = boxSize / 2;\r\n\r\n    const destX = absX + halfBoxSize;\r\n    const destY = absY + halfBoxSize;\r\n\r\n    if ((point1.x === minX && point1.y === minY) ||\r\n      (point2.x === minX && point2.y === minY)) {\r\n      // TOP LEFT & BOTTOM RIGHT\r\n      line.current.setAttributeNS(null, 'y1', halfBoxSize);\r\n      line.current.setAttributeNS(null, 'y2', destY);\r\n    } else {\r\n      // TOP RIGHT of BOTTOM RIGHT\r\n      line.current.setAttributeNS(null, 'y1', destY);\r\n      line.current.setAttributeNS(null, 'y2', halfBoxSize);\r\n    }\r\n    line.current.setAttributeNS(null, 'x1', halfBoxSize);\r\n    line.current.setAttributeNS(null, 'x2', destX);\r\n  }\r\n\r\n  const styles = {\r\n    svg: {\r\n      top: `${minY}px`,\r\n      left: `${minX}px`,\r\n      height: `${absY + boxSize}px`,\r\n      width: `${absX + boxSize}px`\r\n    },\r\n    options: {\r\n      height: `${optionsSize}px`,\r\n      top: `${(absY + boxSize) / 2 + minY - (optionsSize / 2)}px`,\r\n      left: `${(absX + boxSize) / 2 + minX - (optionsSize / 2)}px`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"svg-btn-options\" style={styles.options} >\r\n        <img className=\"toggle-btn\" src=\"assets/img/icons/menu4.png\" alt=\"Options\"\r\n          onClick={() => setToggleOptions(!toggleOptions)} />\r\n        {toggleOptions &&\r\n          <img className=\"option\" src=\"assets/img/icons/remove.png\" alt=\"Remove\"\r\n            onClick={onRemoveConnection} />\r\n        }\r\n      </div>\r\n      <svg className=\"svg-line\" style={styles.svg}>\r\n        <line ref={line} className=\"line\" />\r\n        {/* <path ref={path} style={{ d: 'M 177 118 C 91 69 91 69 5 0', transform: 'translate(0,0.5)' }}\r\n        pointerEvents=\"visibleStroke\" version=\"1.1\" fill=\"none\" stroke=\"#456\">\r\n      </path> */}\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrawLine;","import React from 'react';\r\n\r\nimport DrawLine from './DrawLine';\r\n\r\nfunction DrawLineList({ lines, onRemoveConnection, deviceLocationId, routers }) {\r\n\r\n  const locationById = (id) => {\r\n    if (id.charAt(0) === 'R') {\r\n      const router = routers.find(router => router._id === id);\r\n      return router.location;\r\n    }\r\n    if (id.charAt(0) === 'P') {\r\n      return deviceLocationId.location;\r\n    }\r\n  }\r\n\r\n  const linesBetweenDevices = lines.map((lineIds) => {\r\n    const point1 = locationById(lineIds[0]);\r\n    const point2 = locationById(lineIds[1]);\r\n    return <DrawLine point1={point1} point2={point2}\r\n      onRemoveConnection={() => onRemoveConnection(lineIds[0], lineIds[1])} key={`${deviceLocationId._id}${lineIds[0]}${lineIds[1]}`} />\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {linesBetweenDevices}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DrawLineList;","import { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from '../store/actions';\r\n\r\nfunction DraggingListener(device, pointerDiff, typeToMove) {\r\n\r\n  const dispatch = useDispatch();\r\n  const [newDevice, setNewDevice] = useState(device);\r\n  const [isMove, setIsMove] = useState(false);\r\n  const [update, setUpdate] = useState('');\r\n\r\n  // ********************************** MOVE\r\n  const moveToNewLocation = useCallback(({ clientX, clientY }) => {\r\n    let copy = device;\r\n    setUpdate({}); // FOR UPDATE - CHAECK WHY\r\n    !isMove && setIsMove(true);\r\n    // if(!typeToMove) console.log('typeToMovetypeToMovetypeToMove', typeToMove)\r\n    switch (typeToMove.name) {\r\n      case 'Device':\r\n        copy.location = { x: (clientX - pointerDiff.x), y: (clientY - pointerDiff.y) };\r\n        break;\r\n      case 'Router':\r\n        copy.routers[typeToMove.idx].location = { x: (clientX - pointerDiff.x), y: (clientY - pointerDiff.y) };\r\n        break;\r\n      default: break;\r\n    }\r\n    setNewDevice(copy);\r\n  }, [device, pointerDiff, typeToMove, isMove])\r\n\r\n  const clientMove = useCallback((ev) => {\r\n    if (device && device.isDraging && typeToMove) {\r\n      // ev.stopPropagation();\r\n      // ev.preventDefault();\r\n      const touches = ev.changedTouches;\r\n      (!touches) ? moveToNewLocation(ev)\r\n        : moveToNewLocation({ clientX: touches[0].clientX, clientY: touches[0].clientY });\r\n    }\r\n  }, [moveToNewLocation, device, typeToMove])\r\n\r\n  // ********************************** STOP\r\n  const clientUp = useCallback((ev) => {\r\n    if (device && device.isDraging) {\r\n      // ev.stopPropagation();\r\n      // ev.preventDefault();\r\n\r\n      // var copy = {...newDevice};\r\n      // console.log(newDevice)\r\n      // console.log(copy)\r\n      // copy.isDraging = false;\r\n      // setNewDevice(copy);\r\n\r\n      setNewDevice(prevState => ({ ...prevState, isDraging: false }));\r\n      if (isMove) {\r\n        setIsMove(false);\r\n        // dispatch(actions.updateCurrDevice(copy));\r\n        dispatch(actions.updateCurrDevice({ ...newDevice, isDraging: false }));\r\n      }\r\n    }\r\n  }, [device, isMove, newDevice, dispatch])\r\n\r\n  useEffect(() => {\r\n    setNewDevice(device);\r\n  }, [device]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousemove', clientMove, false);\r\n    window.addEventListener('touchmove', clientMove, false);\r\n    window.addEventListener('mouseup', clientUp, false);\r\n    window.addEventListener('touchend', clientUp, false);\r\n    return () => {\r\n      window.removeEventListener('mousemove', clientMove, false);\r\n      window.removeEventListener('touchmove', clientMove, false);\r\n      window.removeEventListener('mouseup', clientUp, false);\r\n      window.removeEventListener('touchend', clientUp, false);\r\n    }\r\n  }, [clientMove, clientUp]);\r\n\r\n  return newDevice;\r\n\r\n}\r\n\r\nexport default DraggingListener;","import React, { useState, useEffect } from 'react';\r\n\r\nimport DeviceMap from './DeviceMap';\r\nimport RoutersMap from './RoutersMap';\r\nimport DrawLineList from './DrawLineList';\r\n\r\nimport DraggingListener from './DraggingListener';\r\n\r\nfunction MainPreview({ currDevice }) {\r\n\r\n  const [device, setDevice] = useState(null);\r\n  const [pointerDiff, setPointerDiff] = useState({ x: 1, y: 1 });\r\n  const [typeToMove, setTypeToMove] = useState(null);\r\n\r\n  // ********************************** START\r\n  const calcPointerDiff = ({ clientX, clientY }, type) => {\r\n    let temp = { x: 1, y: 1 };\r\n    temp = (type.name === 'Device') ?\r\n      { x: clientX - device.location.x, y: clientY - device.location.y } : temp;\r\n    temp = (type.name === 'Router') ?\r\n      { x: clientX - device.routers[type.idx].location.x, y: clientY - device.routers[type.idx].location.y } : temp;\r\n    setPointerDiff(temp);\r\n  }\r\n  const clientDown = (ev, type) => {\r\n    // ev.stopPropagation();\r\n    // ev.preventDefault();\r\n    // ev.persist()\r\n    // console.log(ev)\r\n\r\n    // var copy = {...device};\r\n    // copy.isDraging = true;\r\n    // setDevice(copy);\r\n    setDevice(prevState => ({ ...prevState, isDraging: true }));\r\n\r\n    // console.log(type)\r\n    setTypeToMove(type);\r\n    const touches = ev.changedTouches;\r\n    (!touches) ? calcPointerDiff(ev, type)\r\n      : calcPointerDiff({ clientX: touches[0].clientX, clientY: touches[0].clientY }, type);\r\n  }\r\n\r\n  // ***************************************************** useEffect\r\n  useEffect(() => {\r\n    if ((currDevice && !device) || (currDevice && device && currDevice._id !== device._id)) {\r\n      setDevice(currDevice);\r\n    }\r\n  }, [device, currDevice]);\r\n\r\n  const newDevice = DraggingListener(device, pointerDiff, typeToMove);\r\n  useEffect(() => {\r\n      setDevice(newDevice);\r\n  }, [newDevice]);\r\n\r\n  const createConnection = (originId, targetId) => {\r\n    const isFound = device.connections\r\n      .find(con => (con[0] === originId && con[1] === targetId) || (con[1] === originId && con[0] === targetId));\r\n    if (!isFound) {\r\n      let copy = { ...device };\r\n      copy.connections.push([originId, targetId]);\r\n      setDevice(copy);\r\n    }\r\n  }\r\n\r\n  const removeConnection = (con1, con2) => {\r\n    const idx = device.connections.findIndex(con => con[0] === con1 && con[1] === con2);\r\n    let copy = { ...device };\r\n    copy.connections.splice(idx, 1);\r\n    setDevice(copy);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-preview\">\r\n\r\n      <div className=\"device-catagory flex space-even wrap\">\r\n        <span>Details</span>\r\n        <span>Connections</span>\r\n        <span>History</span>\r\n      </div>\r\n\r\n      <div className=\"playground\">\r\n        {device && device.location &&\r\n          <>\r\n            <DeviceMap device={device} clientDown={clientDown} onCreateConnection={createConnection} />\r\n            <RoutersMap deviceId={device._id} routers={device.routers} clientDown={clientDown} onCreateConnection={createConnection} />\r\n            <DrawLineList lines={device.connections} routers={device.routers} onRemoveConnection={removeConnection}\r\n              deviceLocationId={{ location: device.location, _id: device._id }}\r\n            />\r\n          </>\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MainPreview)","\r\nexport const sMobile = 64;\r\nexport const mMobile = 280;\r\nexport const lMobile = 480;\r\nexport const sDesktop = 768;\r\nexport const mDesktop = 1024;\r\nexport const lDesktop = 1700;\r\nexport const xlDesktop = 1920;\r\nexport const xxlDesktop = 2400;\r\n","import { useState, useEffect } from 'react';\r\nimport * as MediaService from '../services/MediaService';\r\n\r\nfunction IsWinWidth() {\r\n\r\n  // const initIsDesk = (window.orientation === undefined && navigator.userAgent.indexOf('Mobile') === -1);\r\n  const [isDesktop, setIsDesktop] = useState(MediaService.sDesktop <= window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    let windowWidth = window.innerWidth;\r\n    const updateIsDesktop = (ev) => {\r\n      if (windowWidth !== ev.currentTarget.innerWidth) {\r\n        windowWidth = ev.currentTarget.innerWidth;\r\n        setIsDesktop(MediaService.sDesktop <= windowWidth);\r\n      }\r\n    };\r\n    window.addEventListener('resize', updateIsDesktop);\r\n    return () => {\r\n      window.removeEventListener('resize', updateIsDesktop);\r\n    }\r\n  });\r\n\r\n  return isDesktop;\r\n}\r\n\r\nexport default IsWinWidth;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../store/actions';\r\n// import * as MediaService from '../services/MediaService';\r\n\r\nimport MainList from './MainList';\r\nimport MainPreview from './MainPreview';\r\n\r\nimport IsWinWidthDesk from './IsWinWidthDesk';\r\n\r\nfunction Main() {\r\n\r\n  const dispatch = useDispatch();\r\n  const deviceStore = useSelector(state => state.deviceStore);\r\n  const [isListOpen, setIsListOpen] = useState(false);\r\n\r\n  const isDesktop = IsWinWidthDesk();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.loadDeviceData());\r\n  }, [dispatch]);\r\n\r\n  const toggleDeviceMenu = () => {\r\n    setIsListOpen(!isListOpen);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n\r\n      <div className=\"bar-device\">\r\n        {deviceStore && deviceStore.currDevice &&\r\n          <h2>{deviceStore.currDevice.name}</h2>\r\n        }\r\n        {!isDesktop &&\r\n          <div className=\"only-mobile\">\r\n            <div className=\"mask-layer\" style={{ display: isListOpen ? '' : 'none' }} onClick={toggleDeviceMenu}></div>\r\n            <button onClick={toggleDeviceMenu}>Devices</button>\r\n            {isListOpen &&\r\n              <MainList devices={deviceStore.list} isMobile={true} currDevice={deviceStore.currDevice} />\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      {deviceStore && <div className=\"preview-device flex\">\r\n        {isDesktop &&\r\n          <MainList devices={deviceStore.list} isMobile={false} currDevice={deviceStore.currDevice} />\r\n        }\r\n        <MainPreview currDevice={deviceStore.currDevice} />\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Main)","import React, { useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import actions from '../store/actions';\r\n\r\nimport Main from '../cmps/Main';\r\n\r\nfunction Home() {\r\n  // const dispatch = useDispatch();\r\n  // const homeStore = useSelector(state => state.homeStore);\r\n\r\n  useEffect(() => {\r\n    // dispatch(actions.loadHomeData());\r\n  });\r\n\r\n  // console.log(homeStore)\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>Device Manager</h1>\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Home)","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\n\r\nclass Router extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n          <div className=\"route\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n            </Switch>\r\n          </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport './assets/css/App.scss';\r\n\r\nimport Router from './Router';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/AppStore';\r\n\r\nimport './assets/css/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}